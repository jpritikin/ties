\documentclass[12pt]{article}
\usepackage{fixltx2e}
\usepackage[margin=1in]{geometry}
\usepackage{graphicx}
\usepackage{authblk}
\usepackage{mathtools}
\setlength{\parindent}{0cm}
\setlength{\parskip}{1ex}

<<echo=FALSE, results='hide', warning=FALSE, cache=FALSE>>=
#options(error = browser)
library(knitr)
#knit("ctraw.Rnw", tangle=TRUE)  # to extract only the R chunks
opts_knit$set(error=TRUE)
opts_chunk$set(echo=FALSE, cache=FALSE)
loadlib <- function () {
  library(rpf)
  library(OpenMx)
  library(xtable)
  library(ctsem)
  source("lab.R")
}
suppressPackageStartupMessages(loadlib())

{
  wd <- setwd("..")
  source("measures.R")
  source("cms-score.R")
  setwd(wd)
}

numWaves <- 9
tformat <- "%m/%d/%Y %H:%M:%S"
reftime <- strptime("01/07/2015 12:00:00", tformat, tz="GMT")
labGrid <- buildLabTable(reftime)

lifeExperience <- c('msMet', 'msShared', 'msTeach','msTrainTeach')

mergeLabData <- function(approxLabTime, long, labTime, UnfilteredID) {
  if (!approxLabTime) {  # add labs as separate rows at the correct time
    labRow <- NULL
    for (row in which(!is.na(labTime))) {
      potentialLabs <- data.frame(
        id=UnfilteredID[row], time=as.numeric(labGrid[labTime[row],])/7)
      tpoints <- long[long$id==UnfilteredID[row],'time']
      if (length(tpoints) < 2) next
      rtp <- range(tpoints)
      mask <- rtp[1] < potentialLabs$time & potentialLabs$time < rtp[2]
      labRow <- rbind(labRow, potentialLabs[mask,])
    }
    for (col in colnames(cms)) labRow[[col]] <- NA
    labRow[['lab']] <- 1
    long <- rbind(long, labRow)
  }
  if (approxLabTime) {   # add labs at nearest time to speed up estimation
    labRow <- NULL
    for (row in which(!is.na(labTime))) {
      potentialLabs <- data.frame(
        id=UnfilteredID[row], time=as.numeric(labGrid[labTime[row],])/7)
      tpoints <- long[long$id==UnfilteredID[row],'time']
      rtp <- range(tpoints)
      potentialLabs <- potentialLabs[rtp[1] < potentialLabs$time & potentialLabs$time < rtp[2],]
      active <- findInterval(potentialLabs$time, tpoints)
      long[which(long$id==UnfilteredID[row])[unique(active)],'lab'] <- 1
    }
  }
  long
}
@

\title{Continuous Time Factor Analysis of the 2015~Meditation Class}
\date{\today}
\author[1]{Joshua N.~Pritikin}
\author[2]{Charles C.~Driver}
\affil[1]{University of Virginia}
\affil[2]{Max Planck Institute for Human Development, Berlin}

\begin{document}
\maketitle

Cross sectional factor analysis is prone to find the wrong solution
for causally related latent structures.
We expect that causally related indicators are correlated.
However, it is not helpful for sunrise and rooster to load on the same latent factor.
Hence, longitudinal factor analysis is necessary to make
sense of causally related indicators.

We hypothesized two latent factors underlying the TIES record:
training and TIES.
The quintessential indicator of training is \verb\freqCause\
(``how often did you allocate time to experience
(or try to experience) complete mental silence?'')
because you will most likely not experience TIES unless
you set aside some time to attempt it.
In addition, the life experience items
(\verb\msMetNum\, \verb\msSharedNum\,
\verb\msTeachNum\, and possibly \verb\msTrainTeachNum\)
were set to load on training.
These items' association with training is clearly evidenced in the raw data.
There was a striking difference between participants who
were enrolled in the meditation class and those who were not on these items.
Items \verb\msEffort\, \verb\msAfraid\, and \verb\msIdentity\
were also assigned to training because scores on these
items should move in one direction under the influence
of training. People experienced with TIES would almost never
endorse an item like, ``I am afraid of what will
happen if I stop thinking.''

Since the current measure places emphasis on mental
silence rather than the other potential indicators
of TIES, the quintessential indicator for TIES
is \verb\maxDuration\.
Items \verb\maxDurationOut\ and \verb\successCat\
were also assigned to TIES due to their fairly
direct and straightforward relationship to the
latent construct.
Items \verb\msFast\, \verb\msLife\, and \verb\msPreoccu\
describe circumstances that can preclude TIES even
for people with a lot of TIES experience.
Hence, these items were assigned to the TIES latent
factor (reverse coded).

For the remaining items,
\verb\msTimeAlloc\, \verb\msYearn\, \verb\msEnv\, \verb\msAllow\, and \verb\msTaught\,
it was not obvious whether
they would be more strongly related to training or TIES
so we put in both paths and let the data express its
opinion.
For most items, loadings were expected to be non-negative.
That is, the appropriate items were reverse scored
such that all items were expected to be aligned in the same direction.

To speed estimation, off-diagonal drift entries were fixed to zero.
Hence, the model considered the latent factors as causally independent.
This helps in estimation because it prevents the drift structure
from settling at some uninterpretable solution.
That is,
the chance of obtaining sensible, interpretable estimates is increased.
The cost of this constraint is that the factor structure is
affected by the absence in our model of all the variables
that are excluded from the model or unmeasured
but relate in some way to these hypothesised processes.
Since there could be many such variables,
this model is not such a bad approximation.

For sensible models, the cross effects after accounting
for the free diffusion matrix, free manifestvar,
and free manifestrait will be quite small.
However, complex models often have multiple minima
and some of them are nonsensical.
A stepwise approach is very helpful.

<<results='asis'>>=
loadRawData <- function(approxLabTime) {
  SexItem <- c("Male","Female")
  
  RelaItem = c('Single',
               'In a long-term relationship (i.e. together more than a year)',
               'Other')
  RelaItemShort = c('Single',
                    'Together',
                    'Other')
  # declare global variables
  born <- NULL
  sex <- NULL
  rel <- NULL
  UnfilteredID <- NULL
  labTime <- NULL
  labTA <- NULL
  manifestNames <- NULL
  
  long <- NULL
  
  waveSummary <- expand.grid(wave=1:numWaves, nrow=NA, timeSum=NA)
  
  for (wave in 1:numWaves) {
    raw <- read.csv(sprintf("wave%d-anon.csv", wave), stringsAsFactors=FALSE)
    offset <- 3+ifelse(wave==1, 3, 0)
    if (wave == 1) {
      born <- raw[[3]]
      sex <- factor(raw[[4]], levels=SexItem, labels=tolower(SexItem))
      rel <- factor(raw[[5]], levels=RelaItem, labels=tolower(RelaItemShort))
      UnfilteredID <- raw$id
      labTime <- raw$labTime
      labTA <- raw$labTA
    }
    envMastery <- score.ryff.envMastery14(raw[offset:(offset + 14 - 1)])
    offset <- offset + 14 + ifelse(wave==1, 5, 0)
    cmsCol <- raw[,offset:(offset+24-1)]
    cmsCol <- cbind(NA,NA,NA,NA,NA,cmsCol)
    cms <- prep.cms201410(cmsCol)
    cms[['instrument']] <- NULL
    cms <- cms.testlets(cms)
    for (del in c(
      'msNotion', 'msAny', 'msChildhood', 'msEvery', 'wantLearn', 'skipInt',
      'pctSuccess', 'msEmo', 'msFast1', 'msIdAfraid', 'msIdAfraidLearn',
      'msFastEffort','msFastEffortLife', lifeExperience)) {
      cms[[del]] <- NULL
    }
    #  if (is.null(itemLev)) itemLev <- unlist(lapply(cms, function(col) length(levels(col))))
    cms <- sapply(cms, unclass)
    cms <- cbind(cms, envMastery=envMastery)
    if (is.null(manifestNames)) manifestNames <- colnames(cms)
    mask <- apply(cms, 1, function (r) any(!is.na(r)))
    relweek <- as.numeric((strptime(raw$EndDate, tformat, tz="GMT") - reftime))/7
    waveData <- data.frame(
      id=raw$id[mask], time=relweek[mask], cms[mask,], lab=0)
    waveSummary[wave, c('nrow', 'timeSum')] <- c(nrow(waveData), sum(waveData$time))
    long <- rbind(long, waveData)
  }
  
  options(mxPrintUnitTests = FALSE)
  omxCheckEquals(waveSummary$nrow, c(212, 149, 125, 123, 105, 100, 18, 17, 19))
  omxCheckCloseEnough(waveSummary$timeSum,
                      c(573.312, 799.186, 964.246, 1188.05, 1286.419,
                        1418.394, 317.639,  333.29, 412.253), .01)
  
  long<-long[!is.na(long[,'time']),] #remove rows with no time observation
  
  long <- mergeLabData(approxLabTime, long, labTime, UnfilteredID)
  list(long=long, manifestNames=manifestNames, TDpredNames='lab')
}

loadedData    <- loadRawData(approxLabTime=TRUE)
long          <- loadedData[['long']]
manifestNames <- loadedData[['manifestNames']]
TDpredNames   <- loadedData[['TDpredNames']]
n.TDpred      <- length(TDpredNames)

latents <- c("labeffect", "training", "ties", "envMastery")

free_path <- function(lambda, from, to) {
  lambda[from, to] <- apply(expand.grid(from, to), 1, paste0, collapse="_to_")
  lambda
}

# a plausible factor structure
lambda <- matrix("0", nrow=length(manifestNames), ncol=length(latents),
                 dimnames=list(manifestNames, latents))
lambda['envMastery', 'envMastery'] <- 1

lambda['freqCause', 'training'] <- 1
lambda <- free_path(lambda, paste0(lifeExperience, "Num"), 'training')
lambda <- free_path(lambda, c('msAfraid', 'msIdentity', 'msEffort'), 'training')

lambda['maxDuration', 'ties'] <- 1
lambda <- free_path(lambda, c('msFast', 'msLife', 'msPreoccu'), 'ties')
lambda <- free_path(lambda, c('maxDurationOut', 'successCat'), 'ties')

lambda <- free_path(lambda, c('msTimeAlloc', 'msYearn', 'msEnv', 'msAllow', 'msTaught'),
                    c('training', 'ties'))

longUniqueIds <- unique(long[,'id'])
numUniqueObs <- sapply(1:length(longUniqueIds),
                       function(x) sum(long[,'id'] == longUniqueIds[x]))
container <- mxModel(model="ctraw")
uniqueTpoints <- sort(unique(numUniqueObs))
partition <- cut(uniqueTpoints, 3)
for (px in levels(partition)) {
  Tpoints <- uniqueTpoints[partition == px]
  long1 <- subset(long, id %in% longUniqueIds[which(numUniqueObs %in% Tpoints)])
  wide <- suppressMessages(ctLongToWide(
    long1, id="id", time="time", manifestNames=manifestNames, TDpredNames=TDpredNames))
  wide <- suppressMessages(ctIntervalise(
    wide, max(Tpoints), n.manifest=length(manifestNames), n.TDpred=n.TDpred,
    manifestNames=manifestNames, TDpredNames = TDpredNames))

  if (FALSE) {
    #plot means
    for(i in 1:length(manifestNames)){
      plot(0:(numWaves-1),apply(wide[,paste0(manifestNames[i],'_T',0:(numWaves-1))],2,mean,na.rm=T),type='b',main=paste0('mean ', manifestNames[i]))
    }
  }
  
  model <- ctModel(
    n.manifest=length(manifestNames), n.latent=length(latents),
    Tpoints=max(Tpoints), n.TDpred=n.TDpred,
    LAMBDA=lambda, manifestNames=manifestNames, latentNames=latents, TDpredNames=TDpredNames,
    T0TDPREDCOV=matrix(0, nrow=length(latents), ncol=(max(Tpoints)-1)*n.TDpred),
     TRAITTDPREDCOV=matrix(0, nrow=length(latents), ncol=(max(Tpoints)-1)*n.TDpred), #I don't think we know this is 0 - unless the lab or control condition was randomly assigned?
    MANIFESTTRAITVAR = "auto" #to begin, I would use MANIFESTTRAITVAR so that all between person variance is removed (people can be consistently high / low on some manifest variables of a process and not others) - we can work on the between person structure more adequately once we understand the dynamic structure somewhat. 
  )
  
  model$DIFFUSION[,match('labeffect',latents)] <- 0
  model$T0VAR[,match('labeffect',latents)] <- 0
  model$CINT[,] <- 0
  model$MANIFESTMEANS <- matrix(paste0('mean_',manifestNames),ncol=1)
  model$T0MEANS[,] <- 0
  model$TDPREDEFFECT[-which(latents %in% 'labeffect'),] <- 0
  model$TDPREDEFFECT[which(latents %in% 'labeffect'),] <- 1
  model$DRIFT[match('labeffect',latents),] <- 0  # set persistent labeffect, and we know that changes in latent processes do not cause labs
  model$TDPREDVAR <- diag(0.1,max(Tpoints)-1)
  driftindex<-!diag(length(latents))
  driftindex[,which(latents %in% 'labeffect')] <- FALSE
  model$DRIFT[driftindex] <- 0
  
  m1 <- suppressMessages(ctFit(
    wide, model, nofit=TRUE, meanIntervals=T,stationary=c('T0VAR','T0MEANS')))
  m1 <- mxRename(m1, sprintf("group%02d_%02d", min(Tpoints), max(Tpoints)))
  container <- mxModel(container, m1)
}

container <- mxModel(container,
                     mxFitFunctionMultigroup(names(container$submodels)))
container <- omxAssignFirstParameters(container)

container<- OpenMx::mxOption(container, 'Always Checkpoint', 'Yes')
container<- OpenMx::mxOption(container, 'Checkpoint Units', 'iterations')
container<- OpenMx::mxOption(container, 'Checkpoint Count', 1)    
container <- mxModel(container,
                     mxComputeGradientDescent(nudgeZeroStarts=FALSE, verbose=2))
#container <- mxRestore(container)
#par1 <- omxGetParameters(container)
par1 <- structure(c(1.4227, 1.1595, 0.2002, 0.6875, -0.1148, -0.3284,  0.0968, -0.5863, 2.7355, 3.9751, 0.6689, -0.0252, 0.2603, 0.3562,  0.2534, 0.4733, 1.0408, 1.1646, 0.2945, 0.2298, 0.8869, 0.7762,  3.5337, 4.4651, 3.354, 3.8263, 4.6488, 3.7981, 3.6134, 2.9165,  2.7476, 1.2886, 2.1134, 2.0979, 2.6703, 2.5263, 2.0357, 2.1275,  1.0197, 0.9857, 1.3613, 4.5343, -0.1917, -0.3252, -0.1331, -0.1315,  -0.424, -0.1552, -0.1096, -0.3728, -0.4507, -0.4347, -0.4343,  -0.056, -0.2221, -0.212, -0.8715, -0.9027, -1.393, -2.0951, -0.3842,  -1.4845, -2.4779, 0.0657, -0.0191, -0.4362, 0.1233, -1.3036,  0.0409, 0.0649, 0.0382, -0.2688, -0.9746, -0.4204, -5.8821, -0.0543,  0.0287, -0.2804, -0.0057, 0.4448, 0.2682, -0.0896, 0.326, -0.2605,  0.1648, 0.1401, 0.18, 0.2692, 0.1295, 0.4886, -0.3431, -0.4733,  0.7016, 1.3175, -6.6692, -0.0807, 0.068, 0.2691, 0.4008, 0.3916,  0.0905, 0.3894, -0.2427, -0.3913, -0.0776, 0.3388, 0.2285, 0.1685,  0.5603, -0.4776, -0.6274, 0.2802, 1.4152, -1.3429, -0.033, -0.1702,  0.3762, 0.3659, -0.2826, 0.3145, -0.2966, 0.1111, 0.3188, 0.2401,  0.3379, 0.1503, 0.5851, -0.2648, -0.4966, 0.7224, 1.286, -5.5493,  -0.1036, 0.6889, 0.3646, -0.2841, 0.2198, -0.4755, 0.2941, 0.3201,  0.2217, 0.305, 0.2488, 0.6956, -0.3543, -0.7665, 0.5069, 1.7378,  -1.3551, 0.3339, 0.3751, 0.0913, 0.255, -0.3062, -0.3337, -0.0399,  0.2413, 0.1935, 0.0915, 0.5114, -0.4086, -0.6232, 0.215, 1.2378,  -0.3538, 0.3524, -0.2916, 0.2279, -0.4394, 0.0917, 0.3853, 0.1849,  0.3204, 0.2497, 0.6273, -0.407, -0.6659, 0.4223, 1.5695, -0.813,  0.4418, 0.0596, -0.3371, 0.4572, 0.2622, -0.0058, 0.4664, 0.3881,  0.7683, -0.1948, -0.5256, 0.2569, 0.8712, -2.3402, 0.4623, -0.1905,  0.3442, 0.4091, 0.0895, 0.3776, 0.1318, 0.4819, -0.0624, -0.3673,  0.3624, 0.8264, -0.7951, -0.0211, 0.22, 0.3038, 0.0263, 0.4555,  0.1927, 0.5183, -0.1196, -0.3933, 0.5531, 0.9357, -0.9581, 0.1938,  0.0816, -0.0529, 0.1585, 0.0522, -0.0653, 0.3219, 0.256, 0.0061,  -0.404, -2.6833, 0.5878, -0.3502, 0.1144, 0.0641, 0.162, 0.0011,  -0.0376, 0.0819, 0.0121, -0.8957, 0.5307, 0.4347, 0.0729, 0.3235,  -0.0582, -0.0469, 0.0691, 0.5347, -8.9817, 0.8729, 0.1356, 0.6636,  -0.1392, -0.2532, 0.8091, 0.9568, -0.1105, 0.1392, 0.5266, -0.1768,  -0.2138, 0.7037, 1.0368, -0.6081, 0.5624, 0.0504, -0.0304, 0.2045,  0.6494, 0.1406, 0.0056, -0.1111, 0.0411, 0.6138, -1.5001, 0.4371,  0.021, -0.2445, -0.9639, -0.002, -0.1907, -0.1246, 0.5029, 0.1209,  0.3187, 0.375, 0.3483, 0.3212, 0.3039, 0.9192, 0.0045, -0.0046 ),
                  .Names = c("msEffort_to_training", "msAfraid_to_training",  "msIdentity_to_training", "msYearn_to_training", "msEnv_to_training",  "msAllow_to_training", "msTaught_to_training", "msTimeAlloc_to_training",  "msMetNum_to_training", "msSharedNum_to_training", "msTeachNum_to_training",  "msTrainTeachNum_to_training", "msFast_to_ties", "msLife_to_ties",  "msPreoccu_to_ties", "msYearn_to_ties", "msEnv_to_ties", "msAllow_to_ties",  "msTaught_to_ties", "msTimeAlloc_to_ties", "maxDurationOut_to_ties",  "successCat_to_ties", "mean_msEffort", "mean_msAfraid", "mean_msFast",  "mean_msLife", "mean_msIdentity", "mean_msPreoccu", "mean_msYearn",  "mean_msEnv", "mean_msAllow", "mean_msTaught", "mean_freqCause",  "mean_msTimeAlloc", "mean_maxDuration", "mean_maxDurationOut",  "mean_msMetNum", "mean_msSharedNum", "mean_msTeachNum", "mean_msTrainTeachNum",  "mean_successCat", "mean_envMastery", "manifestvar_msEffort_msEffort",  "manifestvar_msAfraid_msAfraid", "manifestvar_msFast_msFast",  "manifestvar_msLife_msLife", "manifestvar_msIdentity_msIdentity",  "manifestvar_msPreoccu_msPreoccu", "manifestvar_msYearn_msYearn",  "manifestvar_msEnv_msEnv", "manifestvar_msAllow_msAllow", "manifestvar_msTaught_msTaught",  "manifestvar_freqCause_freqCause", "manifestvar_msTimeAlloc_msTimeAlloc",  "manifestvar_maxDuration_maxDuration", "manifestvar_maxDurationOut_maxDurationOut",  "manifestvar_msMetNum_msMetNum", "manifestvar_msSharedNum_msSharedNum",  "manifestvar_msTeachNum_msTeachNum", "manifestvar_msTrainTeachNum_msTrainTeachNum",  "manifestvar_successCat_successCat", "manifestvar_envMastery_envMastery",
                             "diffusion_training_training", "diffusion_ties_training", "diffusion_envMastery_training",  "diffusion_ties_ties", "diffusion_envMastery_ties", "diffusion_envMastery_envMastery",  "drift_training_labeffect", "drift_ties_labeffect", "drift_envMastery_labeffect",  "drift_training_training", "drift_ties_ties", "drift_envMastery_envMastery",  "manifesttraitvar_msEffort_msEffort", "manifesttraitvar_msAfraid_msEffort",  "manifesttraitvar_msFast_msEffort", "manifesttraitvar_msLife_msEffort",  "manifesttraitvar_msIdentity_msEffort", "manifesttraitvar_msPreoccu_msEffort",  "manifesttraitvar_msYearn_msEffort", "manifesttraitvar_msEnv_msEffort",  "manifesttraitvar_msAllow_msEffort", "manifesttraitvar_msTaught_msEffort",  "manifesttraitvar_freqCause_msEffort", "manifesttraitvar_msTimeAlloc_msEffort",  "manifesttraitvar_maxDuration_msEffort", "manifesttraitvar_maxDurationOut_msEffort",  "manifesttraitvar_msMetNum_msEffort", "manifesttraitvar_msSharedNum_msEffort",  "manifesttraitvar_msTeachNum_msEffort", "manifesttraitvar_msTrainTeachNum_msEffort",  "manifesttraitvar_successCat_msEffort", "manifesttraitvar_envMastery_msEffort",  "manifesttraitvar_msAfraid_msAfraid", "manifesttraitvar_msFast_msAfraid",  "manifesttraitvar_msLife_msAfraid", "manifesttraitvar_msIdentity_msAfraid",  "manifesttraitvar_msPreoccu_msAfraid", "manifesttraitvar_msYearn_msAfraid",  "manifesttraitvar_msEnv_msAfraid", "manifesttraitvar_msAllow_msAfraid",  "manifesttraitvar_msTaught_msAfraid", "manifesttraitvar_freqCause_msAfraid",  "manifesttraitvar_msTimeAlloc_msAfraid", "manifesttraitvar_maxDuration_msAfraid",  "manifesttraitvar_maxDurationOut_msAfraid", "manifesttraitvar_msMetNum_msAfraid",  "manifesttraitvar_msSharedNum_msAfraid", "manifesttraitvar_msTeachNum_msAfraid",  "manifesttraitvar_msTrainTeachNum_msAfraid", "manifesttraitvar_successCat_msAfraid",  "manifesttraitvar_envMastery_msAfraid", "manifesttraitvar_msFast_msFast",  "manifesttraitvar_msLife_msFast", "manifesttraitvar_msIdentity_msFast",  "manifesttraitvar_msPreoccu_msFast", "manifesttraitvar_msYearn_msFast",  "manifesttraitvar_msEnv_msFast", "manifesttraitvar_msAllow_msFast",  "manifesttraitvar_msTaught_msFast", "manifesttraitvar_freqCause_msFast",  "manifesttraitvar_msTimeAlloc_msFast", "manifesttraitvar_maxDuration_msFast",  "manifesttraitvar_maxDurationOut_msFast", "manifesttraitvar_msMetNum_msFast",  "manifesttraitvar_msSharedNum_msFast", "manifesttraitvar_msTeachNum_msFast",  "manifesttraitvar_msTrainTeachNum_msFast", "manifesttraitvar_successCat_msFast",  "manifesttraitvar_envMastery_msFast", "manifesttraitvar_msLife_msLife",  "manifesttraitvar_msIdentity_msLife", "manifesttraitvar_msPreoccu_msLife",  "manifesttraitvar_msYearn_msLife", "manifesttraitvar_msEnv_msLife",  "manifesttraitvar_msAllow_msLife", "manifesttraitvar_msTaught_msLife",  "manifesttraitvar_freqCause_msLife", "manifesttraitvar_msTimeAlloc_msLife",  "manifesttraitvar_maxDuration_msLife", "manifesttraitvar_maxDurationOut_msLife",  "manifesttraitvar_msMetNum_msLife", "manifesttraitvar_msSharedNum_msLife",  "manifesttraitvar_msTeachNum_msLife", "manifesttraitvar_msTrainTeachNum_msLife",  "manifesttraitvar_successCat_msLife", "manifesttraitvar_envMastery_msLife",  "manifesttraitvar_msIdentity_msIdentity", "manifesttraitvar_msPreoccu_msIdentity",  "manifesttraitvar_msYearn_msIdentity", "manifesttraitvar_msEnv_msIdentity",  "manifesttraitvar_msAllow_msIdentity", "manifesttraitvar_msTaught_msIdentity",  "manifesttraitvar_freqCause_msIdentity", "manifesttraitvar_msTimeAlloc_msIdentity",  "manifesttraitvar_maxDuration_msIdentity", "manifesttraitvar_maxDurationOut_msIdentity",  "manifesttraitvar_msMetNum_msIdentity", "manifesttraitvar_msSharedNum_msIdentity",  "manifesttraitvar_msTeachNum_msIdentity", "manifesttraitvar_msTrainTeachNum_msIdentity",  "manifesttraitvar_successCat_msIdentity", "manifesttraitvar_envMastery_msIdentity",  "manifesttraitvar_msPreoccu_msPreoccu", "manifesttraitvar_msYearn_msPreoccu",  "manifesttraitvar_msEnv_msPreoccu", "manifesttraitvar_msAllow_msPreoccu",  "manifesttraitvar_msTaught_msPreoccu", "manifesttraitvar_freqCause_msPreoccu",  "manifesttraitvar_msTimeAlloc_msPreoccu", "manifesttraitvar_maxDuration_msPreoccu",  "manifesttraitvar_maxDurationOut_msPreoccu", "manifesttraitvar_msMetNum_msPreoccu",  "manifesttraitvar_msSharedNum_msPreoccu", "manifesttraitvar_msTeachNum_msPreoccu",  "manifesttraitvar_msTrainTeachNum_msPreoccu", "manifesttraitvar_successCat_msPreoccu",  "manifesttraitvar_envMastery_msPreoccu", "manifesttraitvar_msYearn_msYearn",  "manifesttraitvar_msEnv_msYearn", "manifesttraitvar_msAllow_msYearn",  "manifesttraitvar_msTaught_msYearn", "manifesttraitvar_freqCause_msYearn",  "manifesttraitvar_msTimeAlloc_msYearn", "manifesttraitvar_maxDuration_msYearn",  "manifesttraitvar_maxDurationOut_msYearn", "manifesttraitvar_msMetNum_msYearn",  "manifesttraitvar_msSharedNum_msYearn", "manifesttraitvar_msTeachNum_msYearn",  "manifesttraitvar_msTrainTeachNum_msYearn", "manifesttraitvar_successCat_msYearn",  "manifesttraitvar_envMastery_msYearn", "manifesttraitvar_msEnv_msEnv",  "manifesttraitvar_msAllow_msEnv", "manifesttraitvar_msTaught_msEnv",  "manifesttraitvar_freqCause_msEnv", "manifesttraitvar_msTimeAlloc_msEnv",  "manifesttraitvar_maxDuration_msEnv", "manifesttraitvar_maxDurationOut_msEnv",  "manifesttraitvar_msMetNum_msEnv", "manifesttraitvar_msSharedNum_msEnv",  "manifesttraitvar_msTeachNum_msEnv", "manifesttraitvar_msTrainTeachNum_msEnv",  "manifesttraitvar_successCat_msEnv", "manifesttraitvar_envMastery_msEnv",  "manifesttraitvar_msAllow_msAllow", "manifesttraitvar_msTaught_msAllow",  "manifesttraitvar_freqCause_msAllow", "manifesttraitvar_msTimeAlloc_msAllow",  "manifesttraitvar_maxDuration_msAllow", "manifesttraitvar_maxDurationOut_msAllow",  "manifesttraitvar_msMetNum_msAllow", "manifesttraitvar_msSharedNum_msAllow",  "manifesttraitvar_msTeachNum_msAllow", "manifesttraitvar_msTrainTeachNum_msAllow",  "manifesttraitvar_successCat_msAllow", "manifesttraitvar_envMastery_msAllow",  "manifesttraitvar_msTaught_msTaught", "manifesttraitvar_freqCause_msTaught",  "manifesttraitvar_msTimeAlloc_msTaught", "manifesttraitvar_maxDuration_msTaught",  "manifesttraitvar_maxDurationOut_msTaught", "manifesttraitvar_msMetNum_msTaught",  "manifesttraitvar_msSharedNum_msTaught", "manifesttraitvar_msTeachNum_msTaught",  "manifesttraitvar_msTrainTeachNum_msTaught", "manifesttraitvar_successCat_msTaught",  "manifesttraitvar_envMastery_msTaught", "manifesttraitvar_freqCause_freqCause",  "manifesttraitvar_msTimeAlloc_freqCause", "manifesttraitvar_maxDuration_freqCause",  "manifesttraitvar_maxDurationOut_freqCause", "manifesttraitvar_msMetNum_freqCause",  "manifesttraitvar_msSharedNum_freqCause", "manifesttraitvar_msTeachNum_freqCause",  "manifesttraitvar_msTrainTeachNum_freqCause", "manifesttraitvar_successCat_freqCause",  "manifesttraitvar_envMastery_freqCause", "manifesttraitvar_msTimeAlloc_msTimeAlloc",  "manifesttraitvar_maxDuration_msTimeAlloc", "manifesttraitvar_maxDurationOut_msTimeAlloc",  "manifesttraitvar_msMetNum_msTimeAlloc", "manifesttraitvar_msSharedNum_msTimeAlloc",  "manifesttraitvar_msTeachNum_msTimeAlloc", "manifesttraitvar_msTrainTeachNum_msTimeAlloc",  "manifesttraitvar_successCat_msTimeAlloc", "manifesttraitvar_envMastery_msTimeAlloc",  "manifesttraitvar_maxDuration_maxDuration", "manifesttraitvar_maxDurationOut_maxDuration",  "manifesttraitvar_msMetNum_maxDuration", "manifesttraitvar_msSharedNum_maxDuration",  "manifesttraitvar_msTeachNum_maxDuration", "manifesttraitvar_msTrainTeachNum_maxDuration",  "manifesttraitvar_successCat_maxDuration", "manifesttraitvar_envMastery_maxDuration",  "manifesttraitvar_maxDurationOut_maxDurationOut", "manifesttraitvar_msMetNum_maxDurationOut",  "manifesttraitvar_msSharedNum_maxDurationOut", "manifesttraitvar_msTeachNum_maxDurationOut",  "manifesttraitvar_msTrainTeachNum_maxDurationOut", "manifesttraitvar_successCat_maxDurationOut",  "manifesttraitvar_envMastery_maxDurationOut", "manifesttraitvar_msMetNum_msMetNum",  "manifesttraitvar_msSharedNum_msMetNum", "manifesttraitvar_msTeachNum_msMetNum",  "manifesttraitvar_msTrainTeachNum_msMetNum", "manifesttraitvar_successCat_msMetNum",  "manifesttraitvar_envMastery_msMetNum", "manifesttraitvar_msSharedNum_msSharedNum",  "manifesttraitvar_msTeachNum_msSharedNum", "manifesttraitvar_msTrainTeachNum_msSharedNum",  "manifesttraitvar_successCat_msSharedNum", "manifesttraitvar_envMastery_msSharedNum",  "manifesttraitvar_msTeachNum_msTeachNum", "manifesttraitvar_msTrainTeachNum_msTeachNum",  "manifesttraitvar_successCat_msTeachNum", "manifesttraitvar_envMastery_msTeachNum",  "manifesttraitvar_msTrainTeachNum_msTrainTeachNum", "manifesttraitvar_successCat_msTrainTeachNum",  "manifesttraitvar_envMastery_msTrainTeachNum", "manifesttraitvar_successCat_successCat",  "manifesttraitvar_envMastery_successCat", "manifesttraitvar_envMastery_envMastery",  "mean_labT0", "mean_labT1", "mean_labT2", "mean_labT3", "mean_labT4",  "mean_labT5", "mean_labT6", "mean_labT7"))
container <- omxSetParameters(container, names(par1), values=par1)

drift <- mxEval(group01_03.DRIFT, container, compute=TRUE)
dimnames(drift) <- list(paste0("\\text{",latents,"}"), paste0("\\text{",latents,"}"))

envMasteryIndex <- match('envMastery', rownames(container$group01_03$LAMBDA))
tbl <- container$group01_03$LAMBDA$values[-envMasteryIndex,c('training', 'ties')]
tbl[tbl[,] == 0] <- NA
print(xtable(tbl, "Loadings for first model of dynamic factor structure.", "tab:dfs1"))
@ 

The loadings were examined after about 130 major iterations,
prior to meeting the optimizer convergence criterion (Table~\ref{tab:dfs1}).
The drift matrix was
\begin{align}
<<results="asis">>=
print(xtable(drift, align=rep('',1+ncol(drift))), floating=FALSE, tabular.environment="bmatrix", 
  hline.after=NULL, include.rownames=TRUE, include.colnames=TRUE,
  sanitize.rownames.function=function(x)x, sanitize.colnames.function=function(x)x)
@
\end{align}
Items \verb\msEnv\, \verb\msAllow\, and \verb\msTaught\ seemed
more closely associated with TIES than training.
Hence, the loadings from these items to training were fixed to zero.
Item \verb\msTrainTeachNum\ was also eliminated from the model
(all loadings set to zero).
This item was designed for very high ability participants
and seems unhelpful for this sample.
Item \verb\msYearn\ appears to load on both factors.
It seems plausible that this item is not specific enough
and should be discarded from the measure.
We reserve judgment for now.
Item \verb\msTimeAlloc\ shows an unusual pattern.
The loadings indicate that participants with
training spent less time trying to meditate, but
when they did spend more time,
it did increase their experience of TIES.
This is surprising, but no change was made to the
loadings for this item in the improved model.

After about 400 major iterations,
the model was drifting into a non-sensical solution.

<<results='asis'>>=
#container <- mxRestore(container, line=10)
LAMBDA <- container$group01_03$LAMBDA
LAMBDA$values[c('msEnv','msAllow','msTaught'),'training'] <- 0
LAMBDA$free[c('msEnv','msAllow','msTaught'),'training'] <- FALSE
LAMBDA$values[c('msTrainTeachNum'),] <- 0
LAMBDA$free[c('msTrainTeachNum'),] <- FALSE
for (sm in names(container$submodels)) {
  container[[sm]]$LAMBDA <- LAMBDA
}
par2 <- structure(c(1.226, 1.201, 1.261, 1.269, 1.147, 0.683, 1.267,  0.482, 0.914, 1.07, 1.314, 0.885, 0.884, 0.944, 0.275, 0.769,  1.26, 0.9, 0.088, 0.244, 0.292, -0.158, 0.241, -1.637, -1.762,  0.906, 0.342, 0.85, 1.116, -1.389, 0.605, -0.086, 1.085, -1.777,  0.523, 1.398, -0.217, 0.969, -0.345, -0.578, -0.263, -0.302,  -0.696, -0.372, -0.188, -0.374, -0.375, -0.606, -0.501, 0.002,  -0.261, -0.272, -1.054, -1.034, -1.636, -2.318, -0.432, -1.364,  -1.509, 0.677, 0.325, -0.091, 0.57, -0.934, 0.214, 0.223, 0.274,  -0.625, -1.094, -0.185, -0.281, 0.046, 0.13, 0.149, 0.119, 0.287,  0.184, -0.025, 0.002, -0.236, -0.04, -0.034, 0.076, 0.073, -0.02,  0.35, -0.053, -0.222, 0.07, 0.467, -0.197, -0.003, 0.023, 0.396,  0.314, 0.256, -0.108, -0.018, -0.229, -0.076, -0.021, 0.054,  0.108, -0.02, 0.513, -0.139, -0.311, 0.026, 0.787, -0.334, 0.169,  0.066, 0.267, 0.092, -0.015, 0.034, -0.142, -0.02, 0, 0.077,  0.078, -0.001, 0.226, -0.059, -0.161, 0.079, 0.361, -0.321, 0.049,  0.423, 0.215, 0.003, -0.071, -0.185, -0.031, -0.006, -0.008,  0.047, -0.005, 0.347, -0.113, -0.262, 0.04, 0.539, -0.091, 0.304,  0.321, -0.122, -0.041, -0.216, -0.061, -0.001, 0.034, 0.096,  -0.038, 0.513, -0.12, -0.303, 0.023, 0.823, 0.06, 0.304, -0.073,  -0.08, -0.193, -0.035, 0.011, 0.017, 0.07, -0.052, 0.556, -0.114,  -0.344, 0.019, 0.805, 0.181, -0.03, -0.06, -0.164, -0.014, 0.024,  0.03, 0.087, -0.046, 0.564, -0.105, -0.339, -0.032, 0.648, -0.319,  0.152, 0.05, 0.03, 0.039, -0.005, -0.007, 0.007, -0.155, 0.029,  0.093, 0.008, -0.216, -0.344, 0.101, 0.021, -0.015, 0.076, 0.059,  0.055, -0.145, 0.014, 0.086, 0.051, -0.111, -0.196, 0.023, 0.08,  -0.065, -0.046, 0, -0.199, 0.154, 0.265, -0.017, -0.287, -0.153,  0.006, -0.063, -0.019, 0.01, -0.059, 0.046, 0.057, -0.021, -0.121,  -0.085, -0.009, -0.021, -0.04, 0.003, 0.036, 0.054, -0.039, 0.019,  -0.143, 0.265, 0.072, 0.144, -0.042, -0.068, 0.036, 0.125, -0.173,  0.021, 0.171, -0.064, -0.114, 0.033, 0.25, -0.311, 0.148, 0.059,  0.063, 0.012, -0.021, 0.521, -0.137, -0.407, -0.018, 0.853, -0.382,  0.23, 0.009, -0.18, -0.35, 0.013, -0.43, -0.125, 0.022, 1.119,  0.356, 0.124, 0.094, 0.089, 0.194, 1.104, 0, 0.001),
                  .Names = c("msEffort_to_training",  "msAfraid_to_training", "msIdentity_to_training", "msYearn_to_training",  "msTimeAlloc_to_training", "msMetNum_to_training", "msSharedNum_to_training",  "msTeachNum_to_training", "msFast_to_ties", "msLife_to_ties",  "msPreoccu_to_ties", "msYearn_to_ties", "msEnv_to_ties", "msAllow_to_ties",  "msTaught_to_ties", "msTimeAlloc_to_ties", "maxDurationOut_to_ties",  "successCat_to_ties", "mean_msEffort", "mean_msAfraid", "mean_msFast",  "mean_msLife", "mean_msIdentity", "mean_msPreoccu", "mean_msYearn",  "mean_msEnv", "mean_msAllow", "mean_msTaught", "mean_freqCause",  "mean_msTimeAlloc", "mean_maxDuration", "mean_maxDurationOut",  "mean_msMetNum", "mean_msSharedNum", "mean_msTeachNum", "mean_msTrainTeachNum",  "mean_successCat", "mean_envMastery", "manifestvar_msEffort_msEffort",  "manifestvar_msAfraid_msAfraid", "manifestvar_msFast_msFast",  "manifestvar_msLife_msLife", "manifestvar_msIdentity_msIdentity",  "manifestvar_msPreoccu_msPreoccu", "manifestvar_msYearn_msYearn",  "manifestvar_msEnv_msEnv", "manifestvar_msAllow_msAllow", "manifestvar_msTaught_msTaught",  "manifestvar_freqCause_freqCause", "manifestvar_msTimeAlloc_msTimeAlloc",  "manifestvar_maxDuration_maxDuration", "manifestvar_maxDurationOut_maxDurationOut",  "manifestvar_msMetNum_msMetNum", "manifestvar_msSharedNum_msSharedNum",  "manifestvar_msTeachNum_msTeachNum", "manifestvar_msTrainTeachNum_msTrainTeachNum",  "manifestvar_successCat_successCat", "manifestvar_envMastery_envMastery",  "diffusion_training_training", "diffusion_ties_training", "diffusion_envMastery_training",  "diffusion_ties_ties", "diffusion_envMastery_ties", "diffusion_envMastery_envMastery",  "drift_training_labeffect", "drift_ties_labeffect", "drift_envMastery_labeffect",  "drift_training_training", "drift_ties_ties", "drift_envMastery_envMastery",  "manifesttraitvar_msEffort_msEffort", "manifesttraitvar_msAfraid_msEffort",  "manifesttraitvar_msFast_msEffort", "manifesttraitvar_msLife_msEffort",  "manifesttraitvar_msIdentity_msEffort", "manifesttraitvar_msPreoccu_msEffort",  "manifesttraitvar_msYearn_msEffort", "manifesttraitvar_msEnv_msEffort",  "manifesttraitvar_msAllow_msEffort", "manifesttraitvar_msTaught_msEffort",  "manifesttraitvar_freqCause_msEffort", "manifesttraitvar_msTimeAlloc_msEffort",  "manifesttraitvar_maxDuration_msEffort", "manifesttraitvar_maxDurationOut_msEffort",  "manifesttraitvar_msMetNum_msEffort", "manifesttraitvar_msSharedNum_msEffort",  "manifesttraitvar_msTeachNum_msEffort", "manifesttraitvar_msTrainTeachNum_msEffort",  "manifesttraitvar_successCat_msEffort", "manifesttraitvar_envMastery_msEffort",  "manifesttraitvar_msAfraid_msAfraid", "manifesttraitvar_msFast_msAfraid",  "manifesttraitvar_msLife_msAfraid", "manifesttraitvar_msIdentity_msAfraid",  "manifesttraitvar_msPreoccu_msAfraid", "manifesttraitvar_msYearn_msAfraid",  "manifesttraitvar_msEnv_msAfraid", "manifesttraitvar_msAllow_msAfraid",  "manifesttraitvar_msTaught_msAfraid", "manifesttraitvar_freqCause_msAfraid",  "manifesttraitvar_msTimeAlloc_msAfraid", "manifesttraitvar_maxDuration_msAfraid",  "manifesttraitvar_maxDurationOut_msAfraid", "manifesttraitvar_msMetNum_msAfraid",  "manifesttraitvar_msSharedNum_msAfraid", "manifesttraitvar_msTeachNum_msAfraid",  "manifesttraitvar_msTrainTeachNum_msAfraid", "manifesttraitvar_successCat_msAfraid",  "manifesttraitvar_envMastery_msAfraid", "manifesttraitvar_msFast_msFast",  "manifesttraitvar_msLife_msFast", "manifesttraitvar_msIdentity_msFast",  "manifesttraitvar_msPreoccu_msFast", "manifesttraitvar_msYearn_msFast",  "manifesttraitvar_msEnv_msFast", "manifesttraitvar_msAllow_msFast",  "manifesttraitvar_msTaught_msFast", "manifesttraitvar_freqCause_msFast",  "manifesttraitvar_msTimeAlloc_msFast", "manifesttraitvar_maxDuration_msFast",  "manifesttraitvar_maxDurationOut_msFast", "manifesttraitvar_msMetNum_msFast",  "manifesttraitvar_msSharedNum_msFast", "manifesttraitvar_msTeachNum_msFast",  "manifesttraitvar_msTrainTeachNum_msFast", "manifesttraitvar_successCat_msFast",  "manifesttraitvar_envMastery_msFast", "manifesttraitvar_msLife_msLife",  "manifesttraitvar_msIdentity_msLife", "manifesttraitvar_msPreoccu_msLife",  "manifesttraitvar_msYearn_msLife", "manifesttraitvar_msEnv_msLife",  "manifesttraitvar_msAllow_msLife", "manifesttraitvar_msTaught_msLife",  "manifesttraitvar_freqCause_msLife", "manifesttraitvar_msTimeAlloc_msLife",  "manifesttraitvar_maxDuration_msLife", "manifesttraitvar_maxDurationOut_msLife",  "manifesttraitvar_msMetNum_msLife", "manifesttraitvar_msSharedNum_msLife",  "manifesttraitvar_msTeachNum_msLife", "manifesttraitvar_msTrainTeachNum_msLife",  "manifesttraitvar_successCat_msLife", "manifesttraitvar_envMastery_msLife",  "manifesttraitvar_msIdentity_msIdentity", "manifesttraitvar_msPreoccu_msIdentity",  "manifesttraitvar_msYearn_msIdentity", "manifesttraitvar_msEnv_msIdentity",  "manifesttraitvar_msAllow_msIdentity", "manifesttraitvar_msTaught_msIdentity",  "manifesttraitvar_freqCause_msIdentity", "manifesttraitvar_msTimeAlloc_msIdentity",  "manifesttraitvar_maxDuration_msIdentity", "manifesttraitvar_maxDurationOut_msIdentity",  "manifesttraitvar_msMetNum_msIdentity", "manifesttraitvar_msSharedNum_msIdentity",  "manifesttraitvar_msTeachNum_msIdentity", "manifesttraitvar_msTrainTeachNum_msIdentity",  "manifesttraitvar_successCat_msIdentity", "manifesttraitvar_envMastery_msIdentity",  "manifesttraitvar_msPreoccu_msPreoccu", "manifesttraitvar_msYearn_msPreoccu",  "manifesttraitvar_msEnv_msPreoccu", "manifesttraitvar_msAllow_msPreoccu",  "manifesttraitvar_msTaught_msPreoccu", "manifesttraitvar_freqCause_msPreoccu",  "manifesttraitvar_msTimeAlloc_msPreoccu", "manifesttraitvar_maxDuration_msPreoccu",  "manifesttraitvar_maxDurationOut_msPreoccu", "manifesttraitvar_msMetNum_msPreoccu",  "manifesttraitvar_msSharedNum_msPreoccu", "manifesttraitvar_msTeachNum_msPreoccu",  "manifesttraitvar_msTrainTeachNum_msPreoccu", "manifesttraitvar_successCat_msPreoccu",  "manifesttraitvar_envMastery_msPreoccu", "manifesttraitvar_msYearn_msYearn",  "manifesttraitvar_msEnv_msYearn", "manifesttraitvar_msAllow_msYearn",  "manifesttraitvar_msTaught_msYearn", "manifesttraitvar_freqCause_msYearn",  "manifesttraitvar_msTimeAlloc_msYearn", "manifesttraitvar_maxDuration_msYearn",  "manifesttraitvar_maxDurationOut_msYearn", "manifesttraitvar_msMetNum_msYearn",  "manifesttraitvar_msSharedNum_msYearn", "manifesttraitvar_msTeachNum_msYearn",  "manifesttraitvar_msTrainTeachNum_msYearn", "manifesttraitvar_successCat_msYearn",  "manifesttraitvar_envMastery_msYearn", "manifesttraitvar_msEnv_msEnv",  "manifesttraitvar_msAllow_msEnv", "manifesttraitvar_msTaught_msEnv",  "manifesttraitvar_freqCause_msEnv", "manifesttraitvar_msTimeAlloc_msEnv",  "manifesttraitvar_maxDuration_msEnv", "manifesttraitvar_maxDurationOut_msEnv",  "manifesttraitvar_msMetNum_msEnv", "manifesttraitvar_msSharedNum_msEnv",  "manifesttraitvar_msTeachNum_msEnv", "manifesttraitvar_msTrainTeachNum_msEnv",  "manifesttraitvar_successCat_msEnv", "manifesttraitvar_envMastery_msEnv",  "manifesttraitvar_msAllow_msAllow", "manifesttraitvar_msTaught_msAllow",  "manifesttraitvar_freqCause_msAllow", "manifesttraitvar_msTimeAlloc_msAllow",  "manifesttraitvar_maxDuration_msAllow", "manifesttraitvar_maxDurationOut_msAllow",  "manifesttraitvar_msMetNum_msAllow", "manifesttraitvar_msSharedNum_msAllow",  "manifesttraitvar_msTeachNum_msAllow", "manifesttraitvar_msTrainTeachNum_msAllow",  "manifesttraitvar_successCat_msAllow", "manifesttraitvar_envMastery_msAllow",  "manifesttraitvar_msTaught_msTaught", "manifesttraitvar_freqCause_msTaught",  "manifesttraitvar_msTimeAlloc_msTaught", "manifesttraitvar_maxDuration_msTaught",  "manifesttraitvar_maxDurationOut_msTaught", "manifesttraitvar_msMetNum_msTaught",  "manifesttraitvar_msSharedNum_msTaught", "manifesttraitvar_msTeachNum_msTaught",  "manifesttraitvar_msTrainTeachNum_msTaught", "manifesttraitvar_successCat_msTaught",  "manifesttraitvar_envMastery_msTaught", "manifesttraitvar_freqCause_freqCause",  "manifesttraitvar_msTimeAlloc_freqCause", "manifesttraitvar_maxDuration_freqCause",  "manifesttraitvar_maxDurationOut_freqCause", "manifesttraitvar_msMetNum_freqCause",  "manifesttraitvar_msSharedNum_freqCause", "manifesttraitvar_msTeachNum_freqCause",  "manifesttraitvar_msTrainTeachNum_freqCause", "manifesttraitvar_successCat_freqCause",  "manifesttraitvar_envMastery_freqCause", "manifesttraitvar_msTimeAlloc_msTimeAlloc",  "manifesttraitvar_maxDuration_msTimeAlloc", "manifesttraitvar_maxDurationOut_msTimeAlloc",  "manifesttraitvar_msMetNum_msTimeAlloc", "manifesttraitvar_msSharedNum_msTimeAlloc",  "manifesttraitvar_msTeachNum_msTimeAlloc", "manifesttraitvar_msTrainTeachNum_msTimeAlloc",  "manifesttraitvar_successCat_msTimeAlloc", "manifesttraitvar_envMastery_msTimeAlloc",  "manifesttraitvar_maxDuration_maxDuration", "manifesttraitvar_maxDurationOut_maxDuration",  "manifesttraitvar_msMetNum_maxDuration", "manifesttraitvar_msSharedNum_maxDuration",  "manifesttraitvar_msTeachNum_maxDuration", "manifesttraitvar_msTrainTeachNum_maxDuration",  "manifesttraitvar_successCat_maxDuration", "manifesttraitvar_envMastery_maxDuration",  "manifesttraitvar_maxDurationOut_maxDurationOut", "manifesttraitvar_msMetNum_maxDurationOut",  "manifesttraitvar_msSharedNum_maxDurationOut", "manifesttraitvar_msTeachNum_maxDurationOut",  "manifesttraitvar_msTrainTeachNum_maxDurationOut", "manifesttraitvar_successCat_maxDurationOut",  "manifesttraitvar_envMastery_maxDurationOut", "manifesttraitvar_msMetNum_msMetNum",  "manifesttraitvar_msSharedNum_msMetNum", "manifesttraitvar_msTeachNum_msMetNum",  "manifesttraitvar_msTrainTeachNum_msMetNum", "manifesttraitvar_successCat_msMetNum",  "manifesttraitvar_envMastery_msMetNum", "manifesttraitvar_msSharedNum_msSharedNum",  "manifesttraitvar_msTeachNum_msSharedNum", "manifesttraitvar_msTrainTeachNum_msSharedNum",  "manifesttraitvar_successCat_msSharedNum", "manifesttraitvar_envMastery_msSharedNum",  "manifesttraitvar_msTeachNum_msTeachNum", "manifesttraitvar_msTrainTeachNum_msTeachNum",  "manifesttraitvar_successCat_msTeachNum", "manifesttraitvar_envMastery_msTeachNum",  "manifesttraitvar_msTrainTeachNum_msTrainTeachNum", "manifesttraitvar_successCat_msTrainTeachNum",  "manifesttraitvar_envMastery_msTrainTeachNum", "manifesttraitvar_successCat_successCat",  "manifesttraitvar_envMastery_successCat", "manifesttraitvar_envMastery_envMastery",  "mean_labT0", "mean_labT1", "mean_labT2", "mean_labT3", "mean_labT4",  "mean_labT5", "mean_labT6", "mean_labT7"))
container <- omxSetParameters(container, names(par2), values=par2)
if (0) {
  fit <- mxRun(container)
} else {
container <- mxRestore(container)
#cat(deparse(round(omxGetParameters(container), 4)))
par3 <- structure(c(5.8094, 5.4145, 1.9366, -0.2195, -5.1106, 14.5648,  21.3312, 4.5074, 0.2744, 0.2683, 0.3508, 0.4958, 1.1404, 1.3599,  0.3528, 0.1299, 0.9555, 0.4605, 3.0171, 4.0037, 2.835, 3.1785,  4.2178, 3.1988, 3.1901, 2.5402, 2.308, 1.3928, 2.0974, 2.0499,  2.2745, 2.1061, 1.7773, 1.8266, 1.1171, 1.0519, 1.2684, 4.2898,  -0.1957, -0.3246, -0.1329, -0.1386, -0.4075, -0.1391, -0.1116,  -0.3841, -0.5317, -0.4281, -0.4519, -0.0642, -0.1992, -0.1858,  -0.8746, -0.911, -1.3638, -2.0427, -0.3722, -1.3426, -10.2211,  0.0553, -5e-04, -0.4768, 0.2968, -2.2938, 0.0678, 0.0825, 0.0054,  1.9467, -0.6026, -3.5622, -13.7649, 0.0197, 0.1206, -0.1699,  -0.0449, 0.0292, 0.04, 0.3384, 0.1775, -0.101, 0.0109, -0.0391,  -0.233, 0.099, 0.0295, 0.1025, -0.0281, -0.0026, 0.6348, 0.2425,  -11.813, -0.0841, -0.0243, 0.5082, 0.0904, 0.1144, 0.3061, -0.1544,  -0.2618, -0.2754, -0.0124, -0.0481, 0.0218, 0.0656, 0.2312, -0.1022,  -0.1211, 0.2444, 0.3573, -1.8915, -0.017, -0.2132, 0.2185, 0.1634,  0.3204, -0.091, -0.14, 0.0533, 0.176, -0.2839, 0.1331, 0.037,  0.1327, 0.0529, 0.0189, 0.6924, 0.1606, -3.1463, -0.1378, 0.4339,  0.0783, 0.4471, 0.234, -0.1137, 0.1589, 0.1393, -0.2467, 0.0419,  0.057, 0.1743, 0.0401, -0.0882, 0.5083, 0.333, -0.9107, 0.0652,  0.1676, 0.2592, -0.08, -0.2498, -0.1831, 0.0029, 0.0404, 0.0156,  0.0089, 0.2399, -0.0939, -0.1703, 0.2001, 0.2939, -0.9476, 0.1047,  0.5056, 0.147, -0.0945, 0.199, 0.1982, -0.1559, 0.0113, 0.0745,  0.1536, -0.0154, -0.0277, 0.468, 0.34, -0.7145, -0.1402, 0.4095,  -0.2809, 0.2699, -0.0338, -0.239, 0.3374, 0.3172, 0.297, 0.1699,  0.0051, 0.1216, -0.1389, -16.1758, 0.2034, -0.2934, 0.2439, 0.0752,  -0.5247, 0.2391, 0.0758, 0.1431, 0.1541, 0.0197, 0.3489, 0.054,  -7.2623, -0.1658, 0.1649, -0.0385, -0.4398, 0.2896, 0.1646, 0.1612,  0.1088, 0.0063, 0.4889, 0.0894, -1.3143, 0.0953, -0.0914, -0.2181,  0.1282, 0.0628, -0.0825, 0.2902, 0.1533, 0.021, -0.1874, -0.3645,  0.162, -0.111, 0.0717, 0.0363, 0.0992, 0.0628, 0.0528, 0.121,  -0.057, -0.5834, -0.2846, 0.2875, 0.0297, -0.008, 0.1381, 0.1557,  0.0305, 0.0448, -9.5668, 0.8287, 0.1759, 0.2944, 0.1703, 0.1638,  0.6056, 0.0153, -0.1713, 0.1448, 0.208, 0.0749, 0.1593, 0.5161,  0.1278, -0.6452, 0.391, 0.2312, 0.1857, 0.1418, 0.2126, -0.1003,  0.3024, 0.2275, -0.0158, 0.025, -1.5525, 0.3452, 0.0632, -0.0164,  -1.1041, 0.0229, -0.0339, -0.138, 0.0329, -0.421, 0.3396, 0.3733,  0.35, 0.325, 0.2963, 0.913, 0, 0), .Names = c("msEffort_to_training",  "msAfraid_to_training", "msIdentity_to_training", "msYearn_to_training",  "msTimeAlloc_to_training", "msMetNum_to_training", "msSharedNum_to_training",  "msTeachNum_to_training", "msFast_to_ties", "msLife_to_ties",  "msPreoccu_to_ties", "msYearn_to_ties", "msEnv_to_ties", "msAllow_to_ties",  "msTaught_to_ties", "msTimeAlloc_to_ties", "maxDurationOut_to_ties",  "successCat_to_ties", "mean_msEffort", "mean_msAfraid", "mean_msFast",  "mean_msLife", "mean_msIdentity", "mean_msPreoccu", "mean_msYearn",  "mean_msEnv", "mean_msAllow", "mean_msTaught", "mean_freqCause",  "mean_msTimeAlloc", "mean_maxDuration", "mean_maxDurationOut",  "mean_msMetNum", "mean_msSharedNum", "mean_msTeachNum", "mean_msTrainTeachNum",  "mean_successCat", "mean_envMastery", "manifestvar_msEffort_msEffort",  "manifestvar_msAfraid_msAfraid", "manifestvar_msFast_msFast",  "manifestvar_msLife_msLife", "manifestvar_msIdentity_msIdentity",  "manifestvar_msPreoccu_msPreoccu", "manifestvar_msYearn_msYearn",  "manifestvar_msEnv_msEnv", "manifestvar_msAllow_msAllow", "manifestvar_msTaught_msTaught",  "manifestvar_freqCause_freqCause", "manifestvar_msTimeAlloc_msTimeAlloc",  "manifestvar_maxDuration_maxDuration", "manifestvar_maxDurationOut_maxDurationOut",  "manifestvar_msMetNum_msMetNum", "manifestvar_msSharedNum_msSharedNum",  "manifestvar_msTeachNum_msTeachNum", "manifestvar_msTrainTeachNum_msTrainTeachNum",  "manifestvar_successCat_successCat", "manifestvar_envMastery_envMastery",  "diffusion_training_training", "diffusion_ties_training", "diffusion_envMastery_training",  "diffusion_ties_ties", "diffusion_envMastery_ties", "diffusion_envMastery_envMastery",  "drift_training_labeffect", "drift_ties_labeffect", "drift_envMastery_labeffect",  "drift_training_training", "drift_ties_ties", "drift_envMastery_envMastery",  "manifesttraitvar_msEffort_msEffort", "manifesttraitvar_msAfraid_msEffort",  "manifesttraitvar_msFast_msEffort", "manifesttraitvar_msLife_msEffort",  "manifesttraitvar_msIdentity_msEffort", "manifesttraitvar_msPreoccu_msEffort",  "manifesttraitvar_msYearn_msEffort", "manifesttraitvar_msEnv_msEffort",  "manifesttraitvar_msAllow_msEffort", "manifesttraitvar_msTaught_msEffort",  "manifesttraitvar_freqCause_msEffort", "manifesttraitvar_msTimeAlloc_msEffort",  "manifesttraitvar_maxDuration_msEffort", "manifesttraitvar_maxDurationOut_msEffort",  "manifesttraitvar_msMetNum_msEffort", "manifesttraitvar_msSharedNum_msEffort",  "manifesttraitvar_msTeachNum_msEffort", "manifesttraitvar_msTrainTeachNum_msEffort",  "manifesttraitvar_successCat_msEffort", "manifesttraitvar_envMastery_msEffort",  "manifesttraitvar_msAfraid_msAfraid", "manifesttraitvar_msFast_msAfraid",  "manifesttraitvar_msLife_msAfraid", "manifesttraitvar_msIdentity_msAfraid",  "manifesttraitvar_msPreoccu_msAfraid", "manifesttraitvar_msYearn_msAfraid",  "manifesttraitvar_msEnv_msAfraid", "manifesttraitvar_msAllow_msAfraid",  "manifesttraitvar_msTaught_msAfraid", "manifesttraitvar_freqCause_msAfraid",  "manifesttraitvar_msTimeAlloc_msAfraid", "manifesttraitvar_maxDuration_msAfraid",  "manifesttraitvar_maxDurationOut_msAfraid", "manifesttraitvar_msMetNum_msAfraid",  "manifesttraitvar_msSharedNum_msAfraid", "manifesttraitvar_msTeachNum_msAfraid",  "manifesttraitvar_msTrainTeachNum_msAfraid", "manifesttraitvar_successCat_msAfraid",  "manifesttraitvar_envMastery_msAfraid", "manifesttraitvar_msFast_msFast",  "manifesttraitvar_msLife_msFast", "manifesttraitvar_msIdentity_msFast",  "manifesttraitvar_msPreoccu_msFast", "manifesttraitvar_msYearn_msFast",  "manifesttraitvar_msEnv_msFast", "manifesttraitvar_msAllow_msFast",  "manifesttraitvar_msTaught_msFast", "manifesttraitvar_freqCause_msFast",  "manifesttraitvar_msTimeAlloc_msFast", "manifesttraitvar_maxDuration_msFast",  "manifesttraitvar_maxDurationOut_msFast", "manifesttraitvar_msMetNum_msFast",  "manifesttraitvar_msSharedNum_msFast", "manifesttraitvar_msTeachNum_msFast",  "manifesttraitvar_msTrainTeachNum_msFast", "manifesttraitvar_successCat_msFast",  "manifesttraitvar_envMastery_msFast", "manifesttraitvar_msLife_msLife",  "manifesttraitvar_msIdentity_msLife", "manifesttraitvar_msPreoccu_msLife",  "manifesttraitvar_msYearn_msLife", "manifesttraitvar_msEnv_msLife",  "manifesttraitvar_msAllow_msLife", "manifesttraitvar_msTaught_msLife",  "manifesttraitvar_freqCause_msLife", "manifesttraitvar_msTimeAlloc_msLife",  "manifesttraitvar_maxDuration_msLife", "manifesttraitvar_maxDurationOut_msLife",  "manifesttraitvar_msMetNum_msLife", "manifesttraitvar_msSharedNum_msLife",  "manifesttraitvar_msTeachNum_msLife", "manifesttraitvar_msTrainTeachNum_msLife",  "manifesttraitvar_successCat_msLife", "manifesttraitvar_envMastery_msLife",  "manifesttraitvar_msIdentity_msIdentity", "manifesttraitvar_msPreoccu_msIdentity",  "manifesttraitvar_msYearn_msIdentity", "manifesttraitvar_msEnv_msIdentity",  "manifesttraitvar_msAllow_msIdentity", "manifesttraitvar_msTaught_msIdentity",  "manifesttraitvar_freqCause_msIdentity", "manifesttraitvar_msTimeAlloc_msIdentity",  "manifesttraitvar_maxDuration_msIdentity", "manifesttraitvar_maxDurationOut_msIdentity",  "manifesttraitvar_msMetNum_msIdentity", "manifesttraitvar_msSharedNum_msIdentity",  "manifesttraitvar_msTeachNum_msIdentity", "manifesttraitvar_msTrainTeachNum_msIdentity",  "manifesttraitvar_successCat_msIdentity", "manifesttraitvar_envMastery_msIdentity",  "manifesttraitvar_msPreoccu_msPreoccu", "manifesttraitvar_msYearn_msPreoccu",  "manifesttraitvar_msEnv_msPreoccu", "manifesttraitvar_msAllow_msPreoccu",  "manifesttraitvar_msTaught_msPreoccu", "manifesttraitvar_freqCause_msPreoccu",  "manifesttraitvar_msTimeAlloc_msPreoccu", "manifesttraitvar_maxDuration_msPreoccu",  "manifesttraitvar_maxDurationOut_msPreoccu", "manifesttraitvar_msMetNum_msPreoccu",  "manifesttraitvar_msSharedNum_msPreoccu", "manifesttraitvar_msTeachNum_msPreoccu",  "manifesttraitvar_msTrainTeachNum_msPreoccu", "manifesttraitvar_successCat_msPreoccu",  "manifesttraitvar_envMastery_msPreoccu", "manifesttraitvar_msYearn_msYearn",  "manifesttraitvar_msEnv_msYearn", "manifesttraitvar_msAllow_msYearn",  "manifesttraitvar_msTaught_msYearn", "manifesttraitvar_freqCause_msYearn",  "manifesttraitvar_msTimeAlloc_msYearn", "manifesttraitvar_maxDuration_msYearn",  "manifesttraitvar_maxDurationOut_msYearn", "manifesttraitvar_msMetNum_msYearn",  "manifesttraitvar_msSharedNum_msYearn", "manifesttraitvar_msTeachNum_msYearn",  "manifesttraitvar_msTrainTeachNum_msYearn", "manifesttraitvar_successCat_msYearn",  "manifesttraitvar_envMastery_msYearn", "manifesttraitvar_msEnv_msEnv",  "manifesttraitvar_msAllow_msEnv", "manifesttraitvar_msTaught_msEnv",  "manifesttraitvar_freqCause_msEnv", "manifesttraitvar_msTimeAlloc_msEnv",  "manifesttraitvar_maxDuration_msEnv", "manifesttraitvar_maxDurationOut_msEnv",  "manifesttraitvar_msMetNum_msEnv", "manifesttraitvar_msSharedNum_msEnv",  "manifesttraitvar_msTeachNum_msEnv", "manifesttraitvar_msTrainTeachNum_msEnv",  "manifesttraitvar_successCat_msEnv", "manifesttraitvar_envMastery_msEnv",  "manifesttraitvar_msAllow_msAllow", "manifesttraitvar_msTaught_msAllow",  "manifesttraitvar_freqCause_msAllow", "manifesttraitvar_msTimeAlloc_msAllow",  "manifesttraitvar_maxDuration_msAllow", "manifesttraitvar_maxDurationOut_msAllow",  "manifesttraitvar_msMetNum_msAllow", "manifesttraitvar_msSharedNum_msAllow",  "manifesttraitvar_msTeachNum_msAllow", "manifesttraitvar_msTrainTeachNum_msAllow",  "manifesttraitvar_successCat_msAllow", "manifesttraitvar_envMastery_msAllow",  "manifesttraitvar_msTaught_msTaught", "manifesttraitvar_freqCause_msTaught",  "manifesttraitvar_msTimeAlloc_msTaught", "manifesttraitvar_maxDuration_msTaught",  "manifesttraitvar_maxDurationOut_msTaught", "manifesttraitvar_msMetNum_msTaught",  "manifesttraitvar_msSharedNum_msTaught", "manifesttraitvar_msTeachNum_msTaught",  "manifesttraitvar_msTrainTeachNum_msTaught", "manifesttraitvar_successCat_msTaught",  "manifesttraitvar_envMastery_msTaught", "manifesttraitvar_freqCause_freqCause",  "manifesttraitvar_msTimeAlloc_freqCause", "manifesttraitvar_maxDuration_freqCause",  "manifesttraitvar_maxDurationOut_freqCause", "manifesttraitvar_msMetNum_freqCause",  "manifesttraitvar_msSharedNum_freqCause", "manifesttraitvar_msTeachNum_freqCause",  "manifesttraitvar_msTrainTeachNum_freqCause", "manifesttraitvar_successCat_freqCause",  "manifesttraitvar_envMastery_freqCause", "manifesttraitvar_msTimeAlloc_msTimeAlloc",  "manifesttraitvar_maxDuration_msTimeAlloc", "manifesttraitvar_maxDurationOut_msTimeAlloc",  "manifesttraitvar_msMetNum_msTimeAlloc", "manifesttraitvar_msSharedNum_msTimeAlloc",  "manifesttraitvar_msTeachNum_msTimeAlloc", "manifesttraitvar_msTrainTeachNum_msTimeAlloc",  "manifesttraitvar_successCat_msTimeAlloc", "manifesttraitvar_envMastery_msTimeAlloc",  "manifesttraitvar_maxDuration_maxDuration", "manifesttraitvar_maxDurationOut_maxDuration",  "manifesttraitvar_msMetNum_maxDuration", "manifesttraitvar_msSharedNum_maxDuration",  "manifesttraitvar_msTeachNum_maxDuration", "manifesttraitvar_msTrainTeachNum_maxDuration",  "manifesttraitvar_successCat_maxDuration", "manifesttraitvar_envMastery_maxDuration",  "manifesttraitvar_maxDurationOut_maxDurationOut", "manifesttraitvar_msMetNum_maxDurationOut",  "manifesttraitvar_msSharedNum_maxDurationOut", "manifesttraitvar_msTeachNum_maxDurationOut",  "manifesttraitvar_msTrainTeachNum_maxDurationOut", "manifesttraitvar_successCat_maxDurationOut",  "manifesttraitvar_envMastery_maxDurationOut", "manifesttraitvar_msMetNum_msMetNum",  "manifesttraitvar_msSharedNum_msMetNum", "manifesttraitvar_msTeachNum_msMetNum",  "manifesttraitvar_msTrainTeachNum_msMetNum", "manifesttraitvar_successCat_msMetNum",  "manifesttraitvar_envMastery_msMetNum", "manifesttraitvar_msSharedNum_msSharedNum",  "manifesttraitvar_msTeachNum_msSharedNum", "manifesttraitvar_msTrainTeachNum_msSharedNum",  "manifesttraitvar_successCat_msSharedNum", "manifesttraitvar_envMastery_msSharedNum",  "manifesttraitvar_msTeachNum_msTeachNum", "manifesttraitvar_msTrainTeachNum_msTeachNum",  "manifesttraitvar_successCat_msTeachNum", "manifesttraitvar_envMastery_msTeachNum",  "manifesttraitvar_msTrainTeachNum_msTrainTeachNum", "manifesttraitvar_successCat_msTrainTeachNum",  "manifesttraitvar_envMastery_msTrainTeachNum", "manifesttraitvar_successCat_successCat",  "manifesttraitvar_envMastery_successCat", "manifesttraitvar_envMastery_envMastery",  "mean_labT0", "mean_labT1", "mean_labT2", "mean_labT3", "mean_labT4",  "mean_labT5", "mean_labT6", "mean_labT7"))
  
}

# fit <- ctFit(wide, model, retryattempts=0, verbose=2, meanIntervals=T,
#              stationary=c('T0VAR','T0MEANS'), plotOptimization=T)

drift <- mxEval(group01_03.DRIFT, container, compute=TRUE)
dimnames(drift) <- list(paste0("\\text{",latents,"}"), paste0("\\text{",latents,"}"))

tbl <- container$group01_03$LAMBDA$values[-envMasteryIndex,c('training', 'ties')]
tbl[tbl[,] == 0] <- NA
print(xtable(tbl, "Loadings for second model of dynamic factor structure.", "tab:dfs2"))
@ 

The drift matrix was
\begin{align}
<<results="asis">>=
print(xtable(drift, align=rep('',1+ncol(drift))), floating=FALSE, tabular.environment="bmatrix", 
  hline.after=NULL, include.rownames=TRUE, include.colnames=TRUE,
  sanitize.rownames.function=function(x)x, sanitize.colnames.function=function(x)x)
@
\end{align}

<<>>=

if (!file.exists("prep1.csv")) {
  source("prep.R")
}

manifestNames <- c('training', 'ties', 'envMastery')
TDpredNames <- 'lab'

long <- NULL
labTime <- NULL
UnfilteredID <- NULL

for (wave in 1:numWaves) {
  raw <- read.table(sprintf("prep%d.csv", wave), stringsAsFactors=FALSE, header=TRUE)
  if (wave == 1) {
    UnfilteredID <- raw$id
    labTime <- raw$labTime
  }
  for (col in c('start', 'uid', 'born', 'sex', 'rel','labTime','labTA')) raw[[col]] <- NULL
  mask <- apply(raw[,c(manifestNames)], 1, function (r) any(!is.na(r[])))
  raw <- raw[mask,]
  raw$time <- as.numeric((strptime(raw$end, tformat, tz="GMT") - reftime))/7
  raw$lab <- 0
  raw$wave <- wave
  long <- rbind(long, raw)
}

long <- mergeLabData(TRUE, long, labTime, UnfilteredID)

n.TDpred      <- length(TDpredNames)
latents <- c("labeffect", 'trend', "training", "ties", "envMastery")

longUniqueIds <- unique(long[,'id'])
numUniqueObs <- sapply(1:length(longUniqueIds),
                       function(x) sum(long[,'id'] == longUniqueIds[x]))
container <- mxModel(model="ctraw")
uniqueTpoints <- sort(unique(numUniqueObs))
partition <- cut(uniqueTpoints, 3)
for (px in levels(partition)) {
  Tpoints <- uniqueTpoints[partition == px]
  long1 <- subset(long, id %in% longUniqueIds[which(numUniqueObs %in% Tpoints)])
  wide <- suppressMessages(ctLongToWide(
    long1, id="id", time="time", manifestNames=manifestNames, TDpredNames=TDpredNames))
  wide <- suppressMessages(ctIntervalise(
    wide, max(Tpoints), n.manifest=length(manifestNames), n.TDpred=n.TDpred,
    manifestNames=manifestNames, TDpredNames = TDpredNames))

  lambda <- matrix(0, length(manifestNames), length(latents),
                   dimnames=list(manifestNames, latents))
  lambda[,-match(c("labeffect",'trend'), colnames(lambda))] <- diag(nrow(lambda))
  
  model <- ctModel(
    n.manifest=length(manifestNames), n.latent=length(latents),
    Tpoints=max(Tpoints), n.TDpred=n.TDpred,
    LAMBDA=lambda, manifestNames=manifestNames, latentNames=latents, TDpredNames=TDpredNames,
    T0TDPREDCOV=matrix(0, nrow=length(latents), ncol=(max(Tpoints)-1)*n.TDpred),
     TRAITTDPREDCOV=matrix(0, nrow=length(latents), ncol=(max(Tpoints)-1)*n.TDpred), #I don't think we know this is 0 - unless the lab or control condition was randomly assigned?
    MANIFESTTRAITVAR = "auto" #to begin, I would use MANIFESTTRAITVAR so that all between person variance is removed (people can be consistently high / low on some manifest variables of a process and not others) - we can work on the between person structure more adequately once we understand the dynamic structure somewhat. 
  )
  
  model$DIFFUSION[,match(c("labeffect",'trend'),latents)] <- 0
  model$T0VAR[,match(c("labeffect",'trend'),latents)] <- 0
  model$CINT[-which(latents %in% c("trend")),] <- 0
  model$CINT[which(latents %in% c("trend")),] <- 1
  model$MANIFESTMEANS <- matrix(paste0('mean_',manifestNames),ncol=1)
  model$T0MEANS[,] <- 0
  model$TDPREDEFFECT[-which(latents %in% c("labeffect")),] <- 0
  model$TDPREDEFFECT[which(latents %in% c("labeffect")),] <- 1
  driftindex<-!diag(length(latents))
  driftindex[,which(latents %in% c("labeffect",'trend'))] <- FALSE
  driftindex[cbind(which(latents %in% c("labeffect",'trend')),which(latents %in% c("labeffect",'trend')))] <- TRUE
  driftindex[which(latents %in% "labeffect"),which(latents %in% 'trend')] <- TRUE
  driftindex[which(latents %in% "trend"),which(latents %in% 'labeffect')] <- TRUE
  model$DRIFT[driftindex] <- 0
  model$TDPREDVAR <- diag(0.1,max(Tpoints)-1)

  m1 <- suppressMessages(ctFit(
    wide, model, nofit=TRUE, meanIntervals=F,stationary=c('T0VAR','T0MEANS')))
  m1 <- mxRename(m1, sprintf("group%02d_%02d", min(Tpoints), max(Tpoints)))
  container <- mxModel(container, m1)
}



container <- mxModel(container,
                     mxFitFunctionMultigroup(names(container$submodels)))
container <- omxAssignFirstParameters(container)

container<- OpenMx::mxOption(container, 'Always Checkpoint', 'Yes')
container<- OpenMx::mxOption(container, 'Checkpoint Units', 'iterations')
container<- OpenMx::mxOption(container, 'Checkpoint Count', 1)    

container <- mxModel(container,
                     mxComputeGradientDescent(nudgeZeroStarts=FALSE, verbose=2))
container <- mxModel(container,
mxComputeSequence(list(
mxComputeNumericDeriv(),
mxComputeHessianQuality(),
mxComputeStandardError()
)))
# container<-omxSetParameters(container,labels=names(oldparams)[names(oldparams) %in% names(omxGetParameters(container))],
# values=oldparams[names(oldparams) %in% names(omxGetParameters(container))],strict=F)

container<-mxTryHard(container,paste=F,initialTolerance=1e-16,verbose=2)
oldparams<-omxGetParameters(container)
ctsummary(object=container$group07_09)
mxEval(MANIFESTTRAITVAR,container$group07_09,compute=T)

#refit with full drift matrix
for(i in names(container$submodels)){
  container[[i]]$DRIFTlog$free[-which(latents %in% 'labeffect'),]<-TRUE
}
container<-mxTryHard(container,paste=F,initialTolerance=1e-16,verbose=2)


drift <- mxEval(group01_03.DRIFT, container, compute=TRUE)
dimnames(drift) <- list(paste0("\\text{",latents,"}"), paste0("\\text{",latents,"}"))

if (0) {
  
  ####Without lab influence but modelling trend instead
  wide <- ctLongToWide(long, id="id", time="time",
                       manifestNames=manifestNames)
  wide <- ctIntervalise(wide, numWaves, length(manifestNames), n.TDpred=0,manifestNames=manifestNames)
  latents <- c("trend", "training", "ties", "envMastery")
  n.TDpred <- 0
  
  free_path <- function(lambda, from, to) {
    lambda[from, to] <- apply(expand.grid(from, to), 1, paste0, collapse="_to_")
    lambda
  }
  
  # a plausible factor structure
  lambda <- matrix("0", nrow=length(manifestNames), ncol=length(latents),
                   dimnames=list(manifestNames, latents))
  lambda['envMastery', 'envMastery'] <- 1
  
  lambda['freqCause', 'training'] <- 1
  lambda <- free_path(lambda, paste0(lifeExperience, "Num"), 'training')
  lambda <- free_path(lambda, c('msAfraid', 'msIdentity', 'msEffort'), 'training')
  
  lambda['maxDuration', 'ties'] <- 1
  lambda <- free_path(lambda, c('msFast', 'msLife', 'msPreoccu'), 'ties')
  lambda <- free_path(lambda, c('maxDurationOut', 'successCat'), 'ties')
  
  lambda <- free_path(lambda, c('msTimeAlloc', 'msYearn', 'msEnv', 'msAllow', 'msTaught'),
                      c('training', 'ties'))
  
  model <- ctModel(
    n.manifest=length(manifestNames), n.latent=length(latents), Tpoints=numWaves, n.TDpred=n.TDpred,
    LAMBDA=lambda, manifestNames=manifestNames, latentNames=latents, 
    MANIFESTTRAITVAR = "auto" #to begin, I would use MANIFESTTRAITVAR so that all between person variance is removed (people can be consistently high / low on some manifest variables of a process and not others) - we can work on the between person structure more adequately once we understand the dynamic structure somewhat. 
  )
  
  # model$TRAITVAR[,match('lab',latents)] <- 0
  model$DIFFUSION[,match('trend',latents)] <- 0
  model$T0VAR[,match('trend',latents)] <- 0
  model$CINT[match('trend',latents),] <- 1
  model$T0MEANS[match('trend',latents),] <- 0
  model$DRIFT[match('trend',latents),match('trend',latents)] <- 0
  # We think that changes in latent processes do not cause trends
  model$DRIFT[match('trend',latents),] <- 0
  
  
  fit <- ctFit(wide, model, retryattempts=10, verbose=2, stationary=c('T0MEANS', 'T0VAR'),meanIntervals=T)
}

@

there's not a clear causal boundary between the same time
correlations and lagged time regressions

\section{TODO}

\begin{enumerate}
\item Try to do some kind of sensitivity analysis.
\item Throw away less variance in the IFA analysis
\end{enumerate}

\end{document}
