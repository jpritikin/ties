#!/usr/bin/perl

use Modern::Perl '2012';
use Text::CSV_XS;
use constant PARSCALE_DIR => '/opt/tmp';

my $csv = Text::CSV_XS->new ({ binary => 1, eol => "\n" }) or
  die "Cannot use CSV: ".Text::CSV_XS->error_diag ();

sub grab_scores {
    my $out = IO::File->new("scores.csv",'w');
    $csv->print($out, ['id','score','se']);

    my $skip=1;
    my $in = IO::File->new(PARSCALE_DIR."/mentalsilence10.PH3",'r') or die $!;
    while (defined(my $l = $in->getline)) {
	if ($l =~ /SUBJECT IDENTIFICATION/) {
	    $skip=0;
	}
	next if $skip;
	if ($l =~ /^ (\d+)\s/) {
	    my $id = $1;
	    my @l = split /\s+/, $in->getline;
	    $csv->print($out, [$id, $l[8], $l[9]]);
	}
    }
}

sub grab_items {
    my $out = IO::File->new("items.csv",'w');
    $csv->print($out, ['slope','b1', 'b2','b3','b4']);

    my @item;
    my $mode;
    my $in = IO::File->new(PARSCALE_DIR."/mentalsilence10.PH2",'r') or die $!;
    while (defined(my $l = $in->getline)) {
	if ($l =~ /ITEM BLOCK/) {
	    $mode='step';
	}
	next if !$mode;
	if ($mode eq 'step' and $l =~ /STEP PARAMTER/) {
	    my @l = split /\s+/, $l;
	    my @step = @l[5..8];
	    push @item, \@step;
	    next;
	}
	if ($mode eq 'step' and $l =~ /^\+===/) {
	    $mode = 'tbl';
	    next;
	}
	if ($mode eq 'tbl' and $l =~ /^\|/) {
	    my @l = split /[\s|]+/, $l;
	    my $i = $l[2] - 1;
	    my $slope = $l[3];
	    my $loc = $l[5];
	    my $p = $item[$i];
	    for my $step (@$p) { $step = -($step - $loc) }
	    unshift @$p, $slope;
	}
	if ($mode eq 'tbl' and $l =~ /SUMMARY STATISTICS/) { last }
    }
    for my $p (@item) { $csv->print($out, $p); }
}

grab_scores();
grab_items();
